import pyttsx3 #pip install pyttsx3
import datetime
import speech_recognition as sr
import wikipedia
import smtplib
import webbrowser as wb
import psutil
import pyjokes
import os
import pyautogui
import random
import json
import requests
from urllib.request import urlopen
import wolframalpha
import time



engine = pyttsx3.init()
wolframalpha_app_id = '6A462U-5Q28QT69TL'

def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def time_():
    Time=datetime.datetime.now().strftime("%H:%M:%S") #FOR 24 HRS AND "I" FOR 12 HS FORMAT
    speak("The current time is :")
    speak(Time)

def date_():
    year =datetime.datetime.now().year   
    month = datetime.datetime.now().month
    date = datetime.datetime.now().day
    speak("The current date is:")
    speak(date)
    speak(month)
    speak(year)

def wishme():
    speak("Welcome back Rohit")
    time_()
    date_()

        #Greetings    

    hour = datetime.datetime.now().hour     

    if hour>=6 and hour<12:
        speak("Good morning sir!!")
    elif hour>=12 and hour<18:
        speak("Good afternoon sir!!")
    elif hour>=18 and hour<24:
        speak("Good Evening sir")
    else:
        speak("Good night sir!!") 

    speak("Jarvis at your service . Please tell me how can I help you today ?")       
#wishme()    


def TakeCommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening....")
        audio = r.listen(source, phrase_time_limit=5)

    try:
        print("Recognizing....")
        query = r.recognize_google(audio,language='En-In')
        print(query)

    except Exception as e:
        print(e)
        print("Say that again please....")
        return "None"
    return query

def screenshot():
    img = pyautogui.screenshot()
    img.save("C:/Users/ROHIT SINGH/Desktop/screenshot.png")



def cpu():
    usage = str(psutil.cpu_percent())
    speak('CPU is at'+usage)

    battery = psutil.sensors_battery()
    speak('Battery is at')
    speak(battery.percent)

def joke():
    speak(pyjokes.get_joke())


def sendEmail(to,content):
    server=smtplib.SMTP('smtp.gmail.com',587)
    server.ehlo()
    server.starttls()
    #for this function enable low security in gmail

    server.login('rohitsingh.4zeracing@gmail.com','Watsonforcsk7')
    server.sendmail('rahulsingh16199@gmail.com',to,content)
    server.close()





if __name__ == "__main__":

    #wishme()

    while True:
        query = TakeCommand().lower()

        #all commands in small letters 
        #for easy recognition

        if 'time' in query:
            time_()
        if 'date' in query:
            date_()  
        elif 'wikipedia' in query:
            speak("Searching...")
            query=query.replace('wikipedia','')
            result=wikipedia.summary(query,sentences=3)
            speak("According to wikipedia")
            print(result)
            speak(result)
        elif 'send email' in query:
            try:
                speak("What should I send?")
                content=TakeCommand()
                #provide reciever email 

                speak("Who is the reciever?")
                reciever=input("Enter Recievers mail :")
                to = reciever
                sendEmail(to,content)
                speak(content)
                speak('Email has been sent.')

            except Exception as e:
                print(e)
                speak("Unable to send Email .")    

        elif "search in chrome" in query:
            speak("What should I search?")
            chromepath = 'C:/Program Files (x86)/Google/Chrome/Application/chrome.exe %s'
            search=TakeCommand().lower()
            wb.get(chromepath).open_new_tab(search+'.com')


        elif "search youtube" in query:
            speak("What should I search?")
            search_Term = TakeCommand().lower()
            speak("Here we go to YOUTUBE!!")
            wb.open('https://www.youtube.com/results?search_query='+search_Term)

        elif "search google" in query:
            speak("What should I search?")
            search_Term = TakeCommand().lower()
            speak("Searching ....")
            wb.open('https://www.google.com/search?q='+search_Term)

        elif "cpu" in query:
            cpu()

        elif "joke" in query:
            joke()

        elif "go offline" in query:
            speak("Going offline Sir!!")
            quit()

        elif "word" in query:
            speak("Opening MS word...")
            ms_word = r'C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Microsoft Office 2013\Word 2013.exe'
            os.startfile(ms_word)

        elif 'write a note' in query:
            speak("What shoul I write, Sir?")
            notes = TakeCommand()
            file = open('notes.txt','w')
            speak("Sir should I include Date and Time?")
            ans = TakeCommand()
            if 'yes' in ans or 'sure' in ans:
                strTime = datetime.datetime.now().strftime("%I:%M:%S")
                file.write(strTime)
                file.write(":-")
                file.write(notes)
                speak("Done Taking Notes, SIR!")
            else:
                file.write(notes)

        elif "show notes" in query:
            speak("Showing Notes")
            file = open("notes.txt","r")
            print(file.read())
            speak(file.read())


        elif "screenshot" in query:
            screenshot()

        elif "play music" in query:
            songs_dir = 'D:/music'
            music = os.listdir(songs_dir)
            speak("What should I play?")
            speak("Select a number...")
            ans = TakeCommand().lower()
            while('number' not in ans and ans!='random' and ans != 'you choose'):
                speak("I could not understand you. Pllease try again.")
                ans = TakeCommand().lower()
            if 'number' in ans:
                no =  int(ans.replace("number",""))
            if 'random' or 'you choose' in ans:
                no =  random.randint(1,100)
            os.startfile(os.path.join(songs_dir,music[no]))

        elif 'remember that' in query:
            speak("What should I remember?")
            memory = TakeCommand()
            speak("You asked me to remember that"+ memory)
            remember = open('memory.txt','w')
            remember.write(memory)
            remember.close()

        elif 'do you remember anything' in query:
            remember = open('memory.txt','r')
            speak("You asked me to remember that" + remember.read())

        elif "news" in query:
            try:
                jsonObj = urlopen("https://newsapi.org/v2/top-headlines?country=us&category=entertainment&apiKey=API_KEY")
                data = json.load(jsonObj)
                i = 1

                speak("Here are some top headlines from entertainment industry..")
                print("============TOP HEADLINES============'+'\n")
                for item in data['articles']:
                    print(str(i)+'.  '+item['title']+'\n')
                    print(item['description']+'\n')
                    speak(item['title'])
                    i+=1

            except Exception as e:
                print(str(e))        
                    

        elif 'where is' in query:
            query = query.replace('where is',"")
            location = query   
            speak("User asked to locate"+location)
            wb.open_new_tab("https://www.google.com/maps/place/"+location)         


        elif 'calculate' in query:
            client = wolframalpha.Client(wolframalpha_app_id)
            indx = query.lower().split().index('calculate')
            query = query.split()[indx + 1:]
            res = client.query(''.join(query))
            answer = next(res.results).text
            print('The Answer is : '+answer)
            speak('The Answer is : '+answer)


        elif 'what is' in query or 'who is' in query:
            client = wolframalpha.Client(wolframalpha_app_id)
            res = client.query(query)

            try:
                print(next(res.results).text)
                speak(next(res.results).text)
            except StopIteration:
                print("No Result found")

        elif 'stop listening' in query:
            speak('For how much time would you like to stop giving comands')
            ans = int(TakeCommand())
            time.sleep(ans)
            print(ans)
